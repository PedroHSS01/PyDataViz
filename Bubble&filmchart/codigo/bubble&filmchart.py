# -*- coding: utf-8 -*-
"""Bubble&filmchart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HjRb59TRrQGyJgFrg9fXfw8MwTvGbbO1
"""

# Importa as bibliotecas para análise e tratamento
import plotly.express as px
import pandas as pd
import re

df_filmesNtflix = pd.read_csv('/content/n_movies.csv')
df_filmesChrist = pd.read_csv('christmas_movies.csv')

"""# Cria um novo DataFrame
Mantém apenas as linhas (filmes) que possuem uma classificação no IMDb válida.
"""

# Removendo os filmes que não possuem uma classificação
df_filmes_limpoNtflix = df_filmesNtflix[~df_filmesNtflix['rating'].isnull()]
df_filmes_limpoChrist = df_filmesChrist[~df_filmesChrist['imdb_rating'].isnull()]

"""Armazenar informações sobre o primeiro gênero de cada filme"""

# Cria um novo contêiner vazio (generos) com um espaço para cada filme, dps vou preencher.
generos = [None] * len(df_filmes_limpoNtflix)

""" Se a lista chamada generos houver algum erro o código imprime uma mensagem indicando a linha onde ocorreu o erro."""

# Extrair o primeiro gênero de cada filme na lista df_filmes_limpoNtflix e armazena lista chamada generos. Tendo algum erro durante o processo, uma mensagem é exibida.
for i in range(len(df_filmes_limpoNtflix)):
  try:
    primeiro_genre = df_filmes_limpoNtflix.iloc[i]['genre'].split(',')[0]
    generos[i] = primeiro_genre
  except:
    print(f'erro na linha {i} ->> df_filmes_limpoNtflix')

# Usando a biblioteca pandas para ver um resumo do conteúdo
df_filmes_limpoNtflix.info()

"""#Ano"""

# Mantém apenas as linhas onde a coluna 'year' ñ é nula
df_filmes_limpoNtflix[~df_filmes_limpoNtflix.year.isnull()]

# Remove e identifica qualquer conjunto de caracteres que não sejam números. Essa regra será usada para limpar a coluna year, removendo tudo que não for número e deixando apenas os anos.
remove = r'[^0-9]+'

# Tratando coluna 'year' em df_filmes_limpoNtflix
df_filmes_limpoNtflix['year'] = df_filmesNtflix['year'].apply(
    lambda x: re.sub(remove, '', str(x))
)
# Checa dados da coluna year
df_filmes_limpoNtflix['year'].unique()

# Corrige o tamanho da coluna 'year'
df_filmes_limpoNtflix['year'] = df_filmes_limpoNtflix['year'].apply(
    lambda x: str(x) [:4] if len(str(x)) == 8 else x
)
# Checa os dados
df_filmes_limpoNtflix['year'].unique()

"""Converter para inteiro"""

# Mantem apenas as linhas em df_filmes_limpoNtflix onde a coluna year tem um valor, assim descarta quaisquer linhas onde a coluna year esteja vazia.
df_filmes_limpoNtflix = df_filmes_limpoNtflix[~df_filmes_limpoNtflix.year.isnull()]

# converter a coluna year para inteiro
df_filmes_limpoNtflix.year = df_filmes_limpoNtflix.year.astype(int)

# Tratamento dos anos do df_filmes_limpoChrist
df_filmes_limpoChrist = df_filmes_limpoChrist[~df_filmes_limpoChrist.release_year.isnull()]

# Armazenar o primeiro gênero de cada filme do DataFrame df_filmes_limpoChrist.
primeiros_generos = [None] * len(df_filmes_limpoChrist)

# Extrai o primeiro gênero de cada filme na lista df_filmes_limpoChrist e armazena lista chamada generos. Tendo algum erro durante o processo, uma mensagem é exibida.
for i in range(len(df_filmes_limpoChrist)):
  try:
    primeiro_genre = df_filmes_limpoChrist.iloc[i]['genre'].split(',')[0]
    primeiros_generos[i] = primeiro_genre
  except:
    print(f'Erro na linha {i} ->> df_filmes_limpoChrist')

# Transforma os valores da coluna 'release_year' em inteiro.
df_filmes_limpoChrist.release_year = df_filmes_limpoChrist.release_year.astype(int)

# Extrai todos os anos de lançamento distintos dos filmes de Natal presentes no DataFrame df_filmes_limpoChrist.
df_filmes_limpoChrist.release_year.unique()

# Contagem de quantos filmes de Natal foram lançados em cada ano, ordenada cronologicamente pelos anos de lançamento.
df_filmes_limpoChrist.release_year.value_counts().sort_index()

"""##Votos"""

# Tratando as colunas 'votes', remove todas as vírgulas da coluna
df_filmes_limpoNtflix.votes = df_filmes_limpoNtflix.votes.str.replace(',', '')

# Converte valores da coluna "votes" do DataFrame df_filmes_limpoNtflix para o tipo inteiro
df_filmes_limpoNtflix['votes'] = df_filmes_limpoNtflix['votes'].astype(int)

# Essa linha está adicionando uma nova coluna chamada 'generos' ao seu DataFrame df_filmes_limpoNtflix
df_filmes_limpoNtflix['Gêneros'] = generos

# Adiciona os primeiros generos ao df_filmes_limpoChrist
df_filmes_limpoChrist['Primeiro_gênero'] = primeiros_generos

# Resumo do conteúdo
df_filmes_limpoNtflix.info()

# Removendo todas as vírgulas da coluna votes do DataFrame df_filmes_limpoChrist
df_filmes_limpoChrist.votes = df_filmes_limpoChrist.votes.str.replace(',', '')

# Converte valores da coluna "votes" do DataFrame df_filmes_limpoChrist para o tipo inteiro
df_filmes_limpoChrist['votes'] = df_filmes_limpoChrist['votes'].astype(int)

# Resumo do conteúdo
df_filmes_limpoChrist.info()

# Identificando todos os gêneros de filmes únicos presentes e quantas vezes aparece
df_filmes_limpoNtflix.Gêneros.value_counts()

# Identificando todos os gêneros de filmes únicos presentes e quantas vezes aparece
df_filmes_limpoChrist.Primeiro_gênero.value_counts()

"""#Gráfico"""

fig = px.scatter(
    df_filmes_limpoNtflix, x='year', y='rating',
    size='votes', color='Gêneros',
    hover_name='title', size_max=35,
    title='Dispersão de Filmes & Séries Netflix: Ano de Lançamento vs Classificação')
fig.show()

fig = px.scatter(df_filmes_limpoChrist, x='release_year', y='imdb_rating',
                 size='votes', color='Primeiro_gênero',
                 hover_name='title', size_max=35,
                 title='Dispersão de Filmes Natalinos: Ano de Lançamento vs Classificação imdb')
fig.show()